name: build-electron

on:
  workflow_call:

jobs:
  # Build the happ
  call-build-webhapps:
    uses: ./.github/workflows/build-webhapps.yml

  # Build the electron app per platform
  build-electron:
    needs: call-build-webhapps
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-11
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      # Set NPM shell (windows-only)
      - name: Set NPM shell (windows-only)
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          npm config set script-shell "C:\\Program Files\\git\\bin\\bash.exe"
      # Setup AzureSignTool for Windows signing
      - name: Setup AzureSignTool for Windows signing
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          dotnet tool install --global AzureSignTool
      # Download submodules
      - name: Download submodules
        shell: bash
        run: |
          npm run install:submodules
      # Download previously uploaded artifacts
      - uses: actions/download-artifact@master
        with:
          name: all-happ-artifact
          path: artifacts
      # Display artifacts folder
      - name: Display artifacts folder
        run: ls
        working-directory: artifacts
      # Dispatch artifacts
      - name: Dispatch artifacts
        run: |
          cp ./artifacts/snapmail.happ ./electron/bin
          cp ./artifacts/snapmail_zome_hash.txt ./electron/bin
      # Install npm dependencies
      - name: Install npm dependencies
        shell: bash
        run: |
          npm install
      # list electron/bin
      - name: list electron/bin
        continue-on-error: true
        run: ls
        working-directory: electron/bin
      # build webapp
      - name: build webapp
        shell: bash
        run: |
          npm run dist:webapp
      # build electron
      - name: build electron
        shell: bash
        run: |
          npm run build -w electron
      # Setup sign & notarize # HBE_APPLE_CERTIFICATE_PASS
      - name: Setup sign and notarize (macos only)
        if: ${{ runner.os == 'macOs' }}
        continue-on-error: true
        uses:  figleafteam/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.HBE_APPLE_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.HBE_APPLE_CERTIFICATE_PASS }}
      # Dist Electron
      - name: Dist Electron
        shell: bash
        env:
          #WIN_CSC_LINK: ${{ steps.write_file.outputs.filePath }}
          #WIN_CSC_KEY_PASSWORD: ${{ secrets.WINDOWS_PFX_PASSWORD }}
          APPLE_DEV_IDENTITY: ${{ secrets.APPLE_DEV_IDENTITY }}
          APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          DEBUG: electron-osx-sign*,electron-notarize*
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run dist:electron
      # list out folder
      - name: list out-builder folder
        continue-on-error: true
        run: ls
        working-directory: electron/out-builder
      # Move binary for each platform
      - name: Move binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp electron/out-builder/Snapmail* ./artifacts
      # List artifacts folder
      - name: List artifacts folder
        run: ls -R
        working-directory: artifacts
      # Sign Windows certificate
      - name: Sign Windows certificate
        if: ${{ runner.os == 'Windows' }}
        continue-on-error: true
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          AzureSignTool sign -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" -kvi "${{ secrets.AZURE_CLIENT_ID }}" -kvt "${{ secrets.AZURE_TENANT_ID }}" -kvs "${{ secrets.AZURE_CLIENT_SECRET }}" -kvc ${{ secrets.AZURE_CERT_NAME }} -tr http://timestamp.digicert.com -v Snapmail*.exe
      # "upload" artifacts
      - uses: actions/upload-artifact@master
        with:
          name: all-happ-artifact
          path: artifacts/
