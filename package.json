{
  "name": "Snapmail",
  "version": "0.3.1",
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/glassbeadsoftware/snapmail.git"
  },
  "workspaces": [
    "electron",
    "we-applet",
    "webcomponents",
    "webapp"
  ],
  "scripts": {
    "version"             : "./hc --version && holochain --version && lair-keystore --version",
    "ci:rust-install"     : "bash scripts/npm/install-rust-tools.sh",
    "ci:hc-install"       : "bash scripts/npm/install-hc-tools.sh",
    "install:hash-zome"   : "bash scripts/npm/install-hash-zome.sh",
    "setup"               : "bash scripts/npm/setup.sh",
    "hash-zome"           : "bash scripts/npm/hash-zome.sh",
    "build:happ"          : "bash scripts/npm/dist-dna.sh && npm run hash-zome && bash scripts/ts-bindings.sh",
    "build:webapp"        : "npm run build -w webcomponents && npm run build -w webapp",

    "build:devtest"       : "npm run clean:agents & npm run build:happ && npm run build:webapp",
    "devtest"             : "npm run build:devtest && npm run start",
    "devtest:electron"    : "npm run build:devtest && DEV_MODE='dev' npm run devtest -w electron",
    "devtest:we"          : "npm run build:devtest && npm run devtest -w we-applet",

    "start:happ"          : "RUST_LOG=warn echo \"pass\" | ./hc s --piped -f=$ADMIN_PORT generate artifacts/snapmail.happ --run=$HC_PORT -a snapmail network mdns",
    "start:happ-proxied"  : "RUST_LOG=warn echo \"pass\" | ./hc s --piped -f=$ADMIN_PORT generate artifacts/snapmail.happ --run=$HC_PORT -a snapmail network --bootstrap https://bootstrap-staging.holo.host/ quic -p=kitsune-proxy://SYVd4CF3BdJ4DS7KwLLgeU3_DbHoZ34Y-qroZ79DOs8/kitsune-quic/h/165.22.32.11/p/5779/--",
    "start"               : "DEV_MODE='dev' HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run start:happ-proxied\" \"sleep 8 && npm run start:ui -w webapp\"",
    "restart"             : "DEV_MODE='dev' HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run restart:happ\" \"sleep 8 && npm run start:ui -w webapp\"",
    "restart:happ"        : "RUST_LOG=warn echo \"pass\" | ./hc s --piped -f=$ADMIN_PORT run $SINDEX -p=$HC_PORT",
    "network"             : "npm run clean:agents && concurrently-repeat \"npm run start\"",

    "update-version"      : "bash scripts/update-version-number.sh $(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')",

    "dist:webhapp"        : "npm run build:devtest && npm run package -w webapp",
    "dist:we"             : "npm run build:devtest && npm run build -w we-applet && npm run package -w we-applet",
    "dist:win"            : "bash scripts/copy-binaries.sh && npm run dist:win -w electron",

    "update-version"         : "bash scripts/update-version-number.sh $(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')",

    "clean"               : "bash scripts/npm/clean.sh",
    "clean:npm"           : "bash scripts/npm/clean-npm.sh",
    "clean:agents"        : "rm -rf .hc*",
    "clean:all"           : "npm run clean:agents & npm run clean:npm & npm run clean"
  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.0.11",
    "@web/rollup-plugin-html": "^1.11.0",
    "@types/ws": "^8.5.3",
    "bestzip": "^2.2.0",
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "new-port-cli": "^1.0.0",
    "rollup-plugin-copy": "^3.4.0"
  },
  "engines": {
    "npm": ">=7.0.0"
  }
}
