{
  "name": "Snapmail",
  "version": "0.3.1",
  "config": {
    "hc_version": "0.1.0",
    "zits_version": "1.6.1",
    "bin": "bin"
  },
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/glassbeadsoftware/snapmail.git"
  },
  "workspaces": [
    "electron",
    "we-applet",
    "webcomponents",
    "webapp"
  ],
  "scripts": {
    "postinstall"         : "mkdir -p artifacts",
    "install:submodules"  : "bash scripts/npm/install-submodules.sh $npm_package_config_hc_version",
    "install:rust"        : "bash submodules/hc-prebuilt/install-rust.sh",
    "install:hash-zome"   : "bash submodules/hc-prebuilt/install-hash-zome.sh $npm_package_config_bin",
    "install:hc"          : "bash submodules/hc-prebuilt/install-hc-cli.sh $npm_package_config_bin $npm_package_config_hc_version",
    "install:zits"        : "cargo install zits --version $npm_package_config_zits_version",

    "version"             : "$npm_package_config_bin/hc --version && holochain --version && lair-keystore --version",
    "hash-zome"           : "bash submodules/hc-prebuilt/hash-zome.sh $npm_package_config_bin ./submodules/snapmail-rsm/target/wasm32-unknown-unknown/release/snapmail_model.wasm artifacts/snapmail_zome_hash.txt && cp artifacts/snapmail_zome_hash.txt electron/bin",

    "build:happ"          : "bash scripts/npm/dist-dna.sh $npm_package_config_bin && npm run hash-zome",
    "build:webapp"        : "npm run clean:agents & bash scripts/ts-bindings.sh && npm run build:webapp",
    "dist:webapp"         : "npm run build -w webcomponents && npm run dist -w webapp",


    "devtest"             : "npm run build:happ && npm run build:webapp && npm run start",
    "devtest:we"          : "npm run build:happ && npm run dist:webapp && BUILD_MODE='dev' npm run devtest -w we-applet",
    "devtest:electron"    : "npm run build:happ && npm run dist:webapp && npm run devtest -w electron",

    "prodtest"            : "npm run dist -w webapp && HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run start:happ-proxied\" \"sleep 8 && npm run start:ui -w webapp\"",
    "prodtest:we"         : "npm run dist -w webapp && npm run devtest -w we-applet",
    "prodtest:electron"    : "npm run build -w webcomponents && npm run dist -w webapp && npm run prodtest -w electron",

    "start:happ"          : "RUST_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$ADMIN_PORT generate artifacts/snapmail.happ --run=$HC_PORT -a snapmail network mdns",
    "start:happ-proxied"  : "RUST_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$ADMIN_PORT generate artifacts/snapmail.happ --run=$HC_PORT -a snapmail network --bootstrap https://bootstrap-staging.holo.host/ quic -p=kitsune-proxy://SYVd4CF3BdJ4DS7KwLLgeU3_DbHoZ34Y-qroZ79DOs8/kitsune-quic/h/165.22.32.11/p/5779/--",
    "start"               : "BUILD_MODE='dev' HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run start:happ-proxied\" \"sleep 8 && npm run start:ui -w webapp\"",
    "restart"             : "BUILD_MODE='dev' HC_PORT=$(port) ADMIN_PORT=$(port) concurrently \"npm run restart:happ\" \"sleep 8 && npm run start:ui -w webapp\"",
    "restart:happ"        : "RUST_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$ADMIN_PORT run $SINDEX -p=$HC_PORT",
    "network"             : "npm run clean:agents && concurrently-repeat \"npm run start\"",

    "start:launcher"      : "echo pass | hc-launch --piped -n 1 artifacts/snapmail.webhapp network mdns",

    "dist:electron"       : "bash submodules/hc-prebuilt/copy-binaries.sh electron/bin && npm run dist:build -w electron",

    "package:webapp"      : "rm -rf artifacts/snapmail-webapp-ui.zip & cd webapp/dist && bestzip ../../artifacts/snapmail-webapp-ui.zip * && cd ../.. && $npm_package_config_bin/hc web-app pack webapp/webhapp.workdir -o artifacts/snapmail.webhapp",
    "package:we-applet"   : "rm -rf artifacts/snapmail-we_applet-ui.zip & cd we-applet/dist && bestzip ../../artifacts/snapmail-we_applet-ui.zip * && cd ../.. && $npm_package_config_bin/hc web-app pack we-applet/webhapp.workdir -o artifacts/snapmail-we_applet.webhapp",

    "update-version"      : "bash scripts/update-version-number.sh $npm_package_version",

    "dl-test-release"     : "rm -rf release & mkdir -p release & gh release download workflow-test -D release -R glassbeadsoftware/snapmail",

    "clean"               : "bash scripts/npm/clean.sh",
    "clean:npm"           : "bash scripts/npm/clean-npm.sh",
    "clean:agents"        : "rm -rf .hc*",
    "clean:all"           : "npm run clean:agents & npm run clean:npm & npm run clean"
  },
  "devDependencies": {
    "@types/ws": "^8.5.3",
    "bestzip": "^2.2.0",
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "new-port-cli": "^1.0.0"
  },
  "engines": {
    "npm": ">=7.0.0"
  }
}
