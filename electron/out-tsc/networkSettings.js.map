{"version":3,"file":"networkSettings.js","sourceRoot":"","sources":["../src/networkSettings.ts"],"names":[],"mappings":";;;;AAAA,mDAA4B;AAC5B,oDAAoB;AACpB,qCAA6B;AAC7B,2CAAsD;AAYtD,MAAM;AACN,SAAgB,iBAAiB,CAAC,eAAuB;IACvD,IAAI,QAAQ,GAAG,SAAS,CAAC;IACzB,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,qCAAyB,CAAC,CAAC;IAC7E,IAAI;QACF,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAE,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;KACnE;IAAC,OAAM,KAAK,EAAE;QACb,YAAG,CAAC,MAAM,EAAE,kCAAkC,GAAG,cAAc,CAAC,CAAA;QAChE,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAVD,8CAUC;AAGD,MAAM;AACN,SAAgB,iBAAiB,CAAC,eAAuB,EAAE,eAAgC;IAEzF,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,qCAAyB,CAAC,CAAC;IACvE,IAAI;QACF,YAAE,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;KAC7D;IAAC,OAAO,GAAG,EAAE;QACZ,YAAG,CAAC,OAAO,EAAC,0BAA0B,GAAG,GAAG,CAAC,CAAC;QAC9C,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAVD,8CAUC","sourcesContent":["import * as path from 'path'\nimport fs from \"fs\";\nimport {log} from \"./logger\";\nimport {NETWORK_SETTINGS_FILENAME} from \"./constants\";\n\n\n/** */\nexport interface NetworkSettings {\n  proxyUrl: string,\n  bootstrapUrl: string,\n  canMdns: boolean,\n  canProxy: boolean,\n}\n\n\n/** */\nexport function loadNetworkConfig(sessionDataPath: string): NetworkSettings | undefined  {\n  let settings = undefined;\n  const configFilePath = path.join(sessionDataPath, NETWORK_SETTINGS_FILENAME);\n  try {\n    settings = JSON.parse(fs.readFileSync(configFilePath).toString());\n  } catch(error) {\n    log(\"warn\", \"Network config file not found ; \" + configFilePath)\n    return undefined;\n  }\n  return settings;\n}\n\n\n/** */\nexport function saveNetworkConfig(sessionDataPath: string, networkSettings: NetworkSettings, ): boolean {\n\n  const filepath = path.join(sessionDataPath, NETWORK_SETTINGS_FILENAME);\n  try {\n    fs.writeFileSync(filepath, JSON.stringify(networkSettings));\n  } catch (err) {\n    log('error','Writing to file failed: ' + err);\n    return false;\n  }\n  return true;\n}\n"]}